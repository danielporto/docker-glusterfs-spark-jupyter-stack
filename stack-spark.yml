version: '3.8'
networks:
  workbench:
    external: true
  net_traefik:
    external: true

services:
  spark-master:
    image: bde2020/spark-master:3.2.1-hadoop3.2
    networks:
      workbench:
        aliases:
          - spark-master
      net_traefik:
        aliases:
          - spark-master
    # ports:
    #   - 8080:8080
    #   - 7077:7077
    env_file:
      - ./env    
    volumes:
      - /mnt/gfs:/gfs
      - ./:/localdata
    deploy:
      replicas: 1
      mode: replicated
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
      labels:
        - traefik.enable=true
        - traefik.docker.network=net_traefik  # required when container connects to more than one network
        - traefik.http.services.to-spark.loadbalancer.server.port=8080
        - traefik.http.routers.to-spark.rule=Host(`spark.pluribus.vcap.me`)
        # - traefik.http.routers.to-spark.tls=true
        # - traefik.http.routers.to-spark.entrypoints=websecure
        - traefik.http.routers.to-spark.entrypoints=web

  spark-worker:
    image: bde2020/spark-worker:3.2.1-hadoop3.2
    build: 
      context: ./conf
      dockerfile: Dockerfile
    networks:
      # do not use aliases here. replication will make a mess with the server communication
      workbench:
      net_traefik:
    # ports:
    #   - 8081:8081
    volumes:
      - /mnt/gfs:/gfs
      - ./:/localdata
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    env_file:
      - ./env
    deploy:
      mode: global
      restart_policy:
        condition: on-failure


  jupyter:
    image: jupyter/pyspark-notebook:spark-3.2.1
    networks:
      workbench:
        aliases:
          - jupyter
      net_traefik:
        aliases:
          - jupyter
    ports:
      - 10000:8888
      - 4040:4040
      - 4041:4041
      - 4042:4042
    volumes:
      - .:/home/jovyan/work
      - /mnt/gfs:/gfs
    environment:
      - SPARK_MASTER=spark://spark-master:7077
    env_file:
      - ./env
    command: "start-notebook.sh --NotebookApp.token='' --NotebookApp.password=''"
    deploy:
      replicas: 1
      mode: replicated
      restart_policy:
        condition: on-failure
      placement:
        constraints: [node.role == manager]
      labels:
        - traefik.enable=true
        - traefik.docker.network=net_traefik  # required when container connects to more than one network
        - traefik.http.services.to-jupyter.loadbalancer.server.port=8888
        - traefik.http.routers.to-jupyter.rule=Host(`jupyter.pluribus.vcap.me`)
        # - traefik.http.routers.to-jupyter.tls=true
        # - traefik.http.routers.to-jupyter.entrypoints=websecure
        - traefik.http.routers.to-jupyter.entrypoints=web

